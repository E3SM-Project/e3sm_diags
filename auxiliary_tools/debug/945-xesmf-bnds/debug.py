#%%
"""
This script compares the latitude bounds generated by two different Python libraries, xCDAT and CDAT,
when working with a NetCDF dataset. The purpose is to ensure consistency between the bounds added
by xCDAT's `add_bounds` method and CDAT's `getBounds` method. The script performs the following steps:

1. Opens a NetCDF dataset containing climatological data using xCDAT and CDAT.
2. Adds latitude bounds to the dataset using xCDAT.
3. Retrieves latitude bounds from the dataset using CDAT.
4. Compares the latitude bounds from both libraries using NumPy to verify their equality.

This comparison is useful for debugging and validating the behavior of the xCDAT library in handling
latitude bounds, ensuring compatibility with CDAT's established functionality.

# conda create -n xcdat_cdat_latest python xcdat=0.8.0 cdms2=3.1.5 ipykernel
"""
import xcdat as xc
import cdms2
import numpy as np

filepath = (
    "/global/cfs/cdirs/e3sm/diagnostics/observations/Atm/climatology/"
    "GPCP_v3.2/GPCP_v3.2_ANN_198301_202112_climo.nc"
)

#%%
# Open the dataset using xCDAT and add bounds.
ds_xc = xc.open_dataset(filepath, add_bounds=None)
ds_xc_bnds = ds_xc.bounds.add_bounds(axis="Y")
lat_bnds_xc = ds_xc_bnds["lat_bnds"]

# Open the dataset using CDAT and add bounds.
ds_cd = cdms2.open(filepath)
var = ds_cd["gauge_precip"]
lat_bnds_cd = var.getLatitude().getBounds()

# %%
# Compare the latitude bounds using numpy
are_bounds_equal = np.allclose(lat_bnds_xc, lat_bnds_cd)

print("Are the latitude bounds equal?", are_bounds_equal)
# %%
np.testing.assert_equal(lat_bnds_xc, lat_bnds_cd)  # True
